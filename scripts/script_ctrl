#!/bin/bash
#
# Title: script_ctl
#
# Description:
#   Functions to help with script control, including blocking script execution.
#
# Credits:  None
#
# Usage:
#   Source this script and use the appropriate functions for your needs.
#
# Maintainer: dr.j.osborne@gmail.com
#
# License: MIT, see LICENSE file in repository root
#

TRUE=0
FALSE=1

USER_REV_URL=${USER_REV_URL:-"net.poshboy"}

HIDDEN_LOGS=${HIDDEN_LOGS:-"."}

# Log directory for files, hidden and based on reversed URL, script name
TMP_DIR="$HOME/${HIDDEN_LOGS}${USER_REV_URL}"
LOG_DIR="${TMP_DIR}/$(basename $0)"

# Create the log directory if it doesn't already exist
if [ ! -d $LOG_DIR ]
then
   mkdir -p $LOG_DIR
fi

# Define a file name to record that this script is blocked
BLK_FILE="$LOG_DIR/block"


# Function to test if a script should be blocked from executing by the presence
# of a file called "block". First tries checking the $BLK_FILE defined in this
# file, then checks for a block file in the directory given as the 1st parameter
# [$1] - optional directory for testing.
function test_blocked()
{
   if [ -e "$BLK_FILE" ] || [ -e "$1/block" ]
   then
      return $TRUE
   else
      return $FALSE
   fi
}


# Function to help blocking a script by creating a block file
function block_script()
{
   if [ -n "$1" ]
   then
      echo "Blocking script is $(basename $2)" > "$TMP_DIR/$1/block"
   fi
}


# Function to help release block script by removing the block file
function release_script()
{
   if [ -e "$TMP_DIR/$1/block" ]
   then
      rm "$TMP_DIR/$1/block"
   fi
}
